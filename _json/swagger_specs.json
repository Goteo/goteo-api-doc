{
  "basePath": "/v1",
  "definitions": {
    "api_calls_call_get_CallFull": {
      "properties": {
        "amount-available": {
          "description": "Available amount of cash to distribute among projects",
          "type": "number"
        },
        "amount-committed": {
          "description": "Maximum total amount of cash that was available to distribute among projects",
          "type": "number"
        },
        "amount-peers": {
          "description": "Amount of cash already distribute among projects",
          "type": "number"
        },
        "amount-remaining": {
          "description": "Amount of cash still available for distribute among projects",
          "type": "number"
        },
        "applies": {
          "description": "Text description about which kind of projects will be selected for the matchfunding call",
          "type": "string"
        },
        "call-location": {
          "description": "Custom location value for the call",
          "type": "string"
        },
        "call-url": {
          "description": "URL where to visualize the matchfunding call",
          "type": "string"
        },
        "date-closed": {
          "description": "Date when the matchfunding call was closed",
          "type": "string"
        },
        "date-opened": {
          "description": "Date when the matchfunding call was opened",
          "type": "string"
        },
        "date-published": {
          "description": "Date when the matchfunding call was published",
          "type": "string"
        },
        "date-succeeded": {
          "description": "Date when the matchfunding call was succeeded",
          "type": "string"
        },
        "description": {
          "description": "Full description for the matchfunding call",
          "type": "string"
        },
        "description-short": {
          "description": "Short description for the matchfunding call",
          "type": "string"
        },
        "dossier": {
          "description": "External links for the matchfunding call",
          "type": "string"
        },
        "facebook-url": {
          "description": "URL of the Facebook page for the matchfunding call",
          "type": "string"
        },
        "id": {
          "description": "Id of the matchfunding call",
          "type": "string"
        },
        "image-background-url": {
          "description": "URL for the main call image",
          "type": "string"
        },
        "image-url": {
          "description": "URL for the main call image",
          "type": "string"
        },
        "image-url-big": {
          "description": "URL for the main call image (big size)",
          "type": "string"
        },
        "legal": {
          "description": "Some particular legal or conditions for the matchfunding call",
          "type": "string"
        },
        "location": {
          "description": "Location of the call",
          "items": {
            "$ref": "#/definitions/api_calls_call_get_CallLocation"
          },
          "type": "array"
        },
        "logo-url": {
          "description": "URL for the call's logo",
          "type": "string"
        },
        "name": {
          "description": "Name of the matchfunding call",
          "type": "string"
        },
        "owner": {
          "description": "User ID of the call's owner",
          "type": "string"
        },
        "owner-name": {
          "description": "User name of the call's owner",
          "type": "string"
        },
        "projects-active": {
          "description": "Active projects (still with a running campaign) in this matchfunding call",
          "type": "integer"
        },
        "projects-applied": {
          "description": "Total number of projects effectively applicating to this matchfunding call",
          "type": "integer"
        },
        "projects-succeeded": {
          "description": "Projects funded in this matchfunding call",
          "type": "integer"
        },
        "projects-total": {
          "description": "Total number of projects included into this matchfunding call",
          "type": "integer"
        },
        "resources": {
          "description": "Text description of the available resources for the matchfunding call",
          "type": "string"
        },
        "scope": {
          "description": "Scope of the matchfunding call, one of 'local', 'regional', 'national', 'global' (or empty)",
          "type": "string"
        },
        "status": {
          "description": "Status of the call, one of 'pending', 'editing', 'reviewing', 'applying', 'published', 'succeeded', 'expired'",
          "type": "string"
        },
        "translations": {
          "description": "All available translations in a list by language",
          "items": {
            "$ref": "#/definitions/api_calls_call_get_CallTranslation"
          },
          "type": "array"
        },
        "tweet": {
          "description": "Text used to make an automatic tweet to share the the matchfunding call",
          "type": "string"
        },
        "user": {
          "description": "Call owner's user Object",
          "type": "string"
        },
        "whom": {
          "description": "Target of the matchfunding call",
          "type": "string"
        }
      }
    },
    "api_calls_call_get_CallLocation": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "country-code": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "api_calls_call_get_CallTranslation": {
      "properties": {
        "applies": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "description-short": {
          "type": "string"
        },
        "dossier": {
          "type": "string"
        },
        "legal": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resources": {
          "type": "string"
        },
        "tweet": {
          "type": "string"
        },
        "whom": {
          "type": "string"
        }
      }
    },
    "api_calls_call_projects_get_ProjectCall": {
      "properties": {
        "amount": {
          "description": "Currently achieved amount for the project",
          "type": "number"
        },
        "amount-call": {
          "description": "Only the matchfunding part of the achieved amount for the project",
          "type": "number"
        },
        "date-created": {
          "description": "Date when the project was created RFC822 format",
          "type": "string"
        },
        "date-published": {
          "description": "Date when the project was published RFC822 format",
          "type": "string"
        },
        "description-short": {
          "description": "Short description of the project",
          "type": "string"
        },
        "id": {
          "description": "Project unique identifier",
          "type": "string"
        },
        "image-url": {
          "description": "URL with the main image of the project",
          "type": "string"
        },
        "lang": {
          "description": "Main language of the project",
          "type": "string"
        },
        "latitude": {
          "description": "Latitude coordinate for the project",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate for the project",
          "type": "number"
        },
        "minimum": {
          "description": "Minimum amount to achieve to consider the project succeeded",
          "type": "number"
        },
        "name": {
          "description": "Name of the project",
          "type": "string"
        },
        "node": {
          "description": "Node where the project was created originally",
          "type": "string"
        },
        "optimum": {
          "description": "Optimum amount to achieve for the project to achieve all his goals",
          "type": "number"
        },
        "owner": {
          "description": "Projects owner's user ID",
          "type": "string"
        },
        "owner-name": {
          "description": "Projects owner's user name",
          "type": "string"
        },
        "project-url": {
          "description": "URL where for the project",
          "type": "string"
        },
        "region": {
          "description": "Region location for the project",
          "type": "string"
        },
        "status": {
          "description": "Status of the project",
          "type": "string"
        }
      }
    },
    "api_calls_calls_get_Call": {
      "properties": {
        "amount-available": {
          "description": "Available amount of cash to distribute among projects",
          "type": "number"
        },
        "amount-committed": {
          "description": "Maximum total amount of cash that was available to distribute among projects",
          "type": "number"
        },
        "amount-peers": {
          "description": "Amount of cash already distribute among projects",
          "type": "number"
        },
        "amount-remaining": {
          "description": "Amount of cash still available for distribute among projects",
          "type": "number"
        },
        "call-location": {
          "description": "Custom location value for the call",
          "type": "string"
        },
        "call-url": {
          "description": "URL where to visualize the matchfunding call",
          "type": "string"
        },
        "date-opened": {
          "description": "Date when the matchfunding call was opened",
          "type": "string"
        },
        "date-published": {
          "description": "Date when the matchfunding call was published",
          "type": "string"
        },
        "date-succeeded": {
          "description": "Date when the matchfunding call was succeeded",
          "type": "string"
        },
        "description-short": {
          "description": "Short description for the matchfunding call",
          "type": "string"
        },
        "id": {
          "description": "Id of the matchfunding call",
          "type": "string"
        },
        "image-url": {
          "description": "URL for the main call's image",
          "type": "string"
        },
        "latitude": {
          "description": "Latitude coordinate for the call",
          "type": "number"
        },
        "logo-url": {
          "description": "URL for the call's logo",
          "type": "string"
        },
        "longitude": {
          "description": "Longitude coordinate for the call",
          "type": "number"
        },
        "name": {
          "description": "Name of the matchfunding call",
          "type": "string"
        },
        "owner": {
          "description": "User ID of the call's owner",
          "type": "string"
        },
        "owner-name": {
          "description": "User name of the call's owner",
          "type": "string"
        },
        "projects-active": {
          "description": "Active projects (still with a running campaign) in this matchfunding call",
          "type": "integer"
        },
        "projects-applied": {
          "description": "Total number of projects effectively applicating to this matchfunding call",
          "type": "integer"
        },
        "projects-succeeded": {
          "description": "Projects funded in this matchfunding call",
          "type": "integer"
        },
        "projects-total": {
          "description": "Total number of projects included into this matchfunding call",
          "type": "integer"
        },
        "region": {
          "description": "Region location for the call",
          "type": "string"
        },
        "status": {
          "description": "Status of the call, one of 'pending', 'editing', 'reviewing', 'applying', 'published', 'succeeded', 'expired'",
          "type": "string"
        }
      }
    },
    "api_calls_calls_get_calls": {
      "items": {
        "$ref": "#/definitions/api_calls_calls_get_Call"
      },
      "type": "array"
    },
    "api_categories_categories_get_Category": {
      "properties": {
        "description": {
          "description": "Category short description",
          "type": "string"
        },
        "id": {
          "description": "Category unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Category name",
          "type": "string"
        },
        "total-projects": {
          "description": "Number of projects using this license",
          "type": "integer"
        },
        "total-users": {
          "description": "Number of users using this license",
          "type": "integer"
        }
      }
    },
    "api_categories_categories_get_categories": {
      "items": {
        "$ref": "#/definitions/api_categories_categories_get_Category"
      },
      "type": "array"
    },
    "api_digests_get_Digest": {
      "properties": {
        "buckets": {
          "items": {
            "$ref": "#/definitions/api_digests_get_Group"
          },
          "type": "array"
        },
        "endpoint": {
          "type": "string"
        },
        "global": {
          "$ref": "#/definitions/api_digests_get_Group"
        }
      }
    },
    "api_digests_get_Group": {},
    "api_invests_invest_get_InvestFull": {
      "properties": {
        "amount": {
          "description": "Amount of the contribution",
          "type": "number"
        },
        "call": {
          "description": "Id of the matchfunding call if this invest belongs to a invest in selected",
          "type": "string"
        },
        "conversion-ratio": {
          "description": "Currency rate at the moment of the payment (relative to EUR)",
          "type": "number"
        },
        "currency": {
          "description": "Currency of the contribution (currently one of EUR, GBP or USD)",
          "type": "string"
        },
        "date-charged": {
          "description": "Date-only when the invest was charged in RFC822 format",
          "type": "string"
        },
        "date-created": {
          "description": "Date-only when the invest was created in RFC822 format",
          "type": "string"
        },
        "date-returned": {
          "description": "Date-only when the invest was returned (if applicable) in RFC822 format",
          "type": "string"
        },
        "date-updated": {
          "description": "Date & Time when the invest was last updated in RFC822 format",
          "type": "string"
        },
        "id": {
          "description": "Invest unique identifier",
          "type": "integer"
        },
        "location": {
          "description": "Location of the invest",
          "items": {
            "$ref": "#/definitions/api_invests_invest_get_InvestLocation"
          },
          "type": "array"
        },
        "project": {
          "description": "Id of the invest where applies the invests",
          "type": "string"
        },
        "region": {
          "description": "Region location for the invest",
          "type": "string"
        },
        "resign": {
          "description": "True if the user does not want any reward in exchango of the contribution",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the payment, one of 'processing', 'pending', 'charged', 'cancelled', 'paid', 'returned', 'relocated', 'pool-returned'",
          "type": "string"
        },
        "type": {
          "description": "Type of the payment, one of 'payment', 'drop', 'pool'",
          "type": "string"
        }
      }
    },
    "api_invests_invest_get_InvestLocation": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "country-code": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "api_invests_invests_get_Invest": {
      "properties": {
        "amount": {
          "description": "Amount of the contribution",
          "type": "number"
        },
        "call": {
          "description": "Id of the matchfunding call if this invest belongs to a invest in selected",
          "type": "string"
        },
        "conversion-ratio": {
          "description": "Currency rate at the moment of the payment (relative to EUR)",
          "type": "number"
        },
        "currency": {
          "description": "Currency of the contribution (currently one of EUR, GBP or USD)",
          "type": "string"
        },
        "date-charged": {
          "description": "Date-only when the invest was charged in RFC822 format",
          "type": "string"
        },
        "date-created": {
          "description": "Date-only when the invest was created in RFC822 format",
          "type": "string"
        },
        "date-returned": {
          "description": "Date-only when the invest was returned (if applicable) in RFC822 format",
          "type": "string"
        },
        "date-updated": {
          "description": "Date & Time when the invest was last updated in RFC822 format",
          "type": "string"
        },
        "id": {
          "description": "Invest unique identifier",
          "type": "integer"
        },
        "latitude": {
          "description": "Latitude coordinate for the invest",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate for the invest",
          "type": "number"
        },
        "project": {
          "description": "Id of the invest where applies the invests",
          "type": "string"
        },
        "region": {
          "description": "Region location for the invest",
          "type": "string"
        },
        "resign": {
          "description": "True if the user does not want any reward in exchango of the contribution",
          "type": "boolean"
        },
        "status": {
          "description": "Status of the payment, one of 'processing', 'pending', 'charged', 'cancelled', 'paid', 'returned', 'relocated', 'pool-returned'",
          "type": "string"
        },
        "type": {
          "description": "Type of the payment, one of 'payment', 'drop', 'pool'",
          "type": "string"
        }
      }
    },
    "api_invests_invests_get_invests": {
      "items": {
        "$ref": "#/definitions/api_invests_invests_get_Invest"
      },
      "type": "array"
    },
    "api_licenses_licenses_get_License": {
      "properties": {
        "description": {
          "description": "License short description",
          "type": "string"
        },
        "id": {
          "description": "License unique identifier",
          "type": "string"
        },
        "name": {
          "description": "License name",
          "type": "string"
        },
        "svg-url": {
          "description": "Icon URL for the license",
          "type": "string"
        },
        "total-projects": {
          "description": "Number of projects using this license",
          "type": "integer"
        },
        "total-rewards": {
          "description": "Number of rewards using this license",
          "type": "integer"
        },
        "url": {
          "description": "License's URL",
          "type": "string"
        }
      }
    },
    "api_licenses_licenses_get_licenses": {
      "items": {
        "$ref": "#/definitions/api_licenses_licenses_get_License"
      },
      "type": "array"
    },
    "api_projects_project_donors_get_ProjectDonor": {
      "properties": {
        "anonymous": {
          "description": "If the contributor is anonymous",
          "type": "boolean"
        },
        "date-created": {
          "description": "Date when the user was created RFC822 format",
          "type": "string"
        },
        "id": {
          "description": "User unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Name of the user",
          "type": "string"
        },
        "node": {
          "description": "Node where the user was created originally",
          "type": "string"
        },
        "profile-image-url": {
          "description": "URL with the avatar (image) of the user",
          "type": "string"
        },
        "profile-url": {
          "description": "URL for the user profile",
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectCost": {
      "properties": {
        "amount": {
          "type": "number"
        },
        "cost": {
          "type": "string"
        },
        "date-from": {
          "type": "string"
        },
        "date-to": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectFull": {
      "properties": {
        "about": {
          "description": "About the project or his creators",
          "type": "string"
        },
        "amount": {
          "description": "Currently achieved amount for the project",
          "type": "number"
        },
        "costs": {
          "description": "Economical detailed list of necessities",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectCost"
          },
          "type": "array"
        },
        "currency": {
          "description": "Currency used in the project (ISO4217 Format)",
          "type": "string"
        },
        "currency-rate": {
          "description": "Currency rate when the project was created (if was not EUR)",
          "type": "number"
        },
        "date-closed": {
          "description": "Date when the project was closed (if was a failed project) RFC822 format",
          "type": "string"
        },
        "date-created": {
          "description": "Date when the project was created RFC822 format",
          "type": "string"
        },
        "date-passed": {
          "description": "Date when the project passed the first round (reached the minimum) RFC822 format",
          "type": "string"
        },
        "date-published": {
          "description": "Date when the project was published RFC822 format",
          "type": "string"
        },
        "date-succeeded": {
          "description": "Date when the project was succeeded RFC822 format",
          "type": "string"
        },
        "date-updated": {
          "description": "Date when the project was updated RFC822 format",
          "type": "string"
        },
        "description": {
          "description": "Full description of the project",
          "type": "string"
        },
        "description-short": {
          "description": "Short description of the project",
          "type": "string"
        },
        "goal": {
          "description": "Goal of the project",
          "type": "string"
        },
        "id": {
          "description": "Project unique identifier",
          "type": "string"
        },
        "image-gallery": {
          "description": "List of images for the project",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectGallery"
          },
          "type": "array"
        },
        "image-url": {
          "description": "URL with the main image of the project",
          "type": "string"
        },
        "image-url-big": {
          "description": "URL with the main image (big size) of the project",
          "type": "string"
        },
        "lang": {
          "description": "Main language of the project",
          "type": "string"
        },
        "location": {
          "description": "Location of the project",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectLocation"
          },
          "type": "array"
        },
        "minimum": {
          "description": "Minimum amount to achieve to consider the project succeeded",
          "type": "number"
        },
        "motivation": {
          "description": "Motivation text writen by the owner of the project",
          "type": "string"
        },
        "name": {
          "description": "Name of the project",
          "type": "string"
        },
        "needs": {
          "description": "Non-economical detailed list of necessities",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectNeed"
          },
          "type": "array"
        },
        "node": {
          "description": "Node where the project was created originally",
          "type": "string"
        },
        "optimum": {
          "description": "Optimum amount to achieve for the project to achieve all his goals",
          "type": "number"
        },
        "owner": {
          "description": "Project owner's user ID",
          "type": "string"
        },
        "owner-name": {
          "description": "Project owner's user name",
          "type": "string"
        },
        "project-url": {
          "description": "URL where for the project",
          "type": "string"
        },
        "rewards": {
          "description": "List of rewards for the project",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectReward"
          },
          "type": "array"
        },
        "scope": {
          "description": "Scope of the project",
          "type": "string"
        },
        "status": {
          "description": "Status of the project",
          "type": "string"
        },
        "translations": {
          "description": "All available translations in a list by language",
          "items": {
            "$ref": "#/definitions/api_projects_project_get_ProjectTranslation"
          },
          "type": "array"
        },
        "user": {
          "description": "Project owner's user Object",
          "type": "string"
        },
        "video-url": {
          "description": "URL with the main video of the project",
          "type": "string"
        },
        "widget-url": {
          "description": "URL with the main widget (embed code) of the project",
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectGallery": {
      "properties": {
        "image-url": {
          "type": "string"
        },
        "resource-url": {
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectLocation": {
      "properties": {
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "country-code": {
          "type": "string"
        },
        "latitude": {
          "type": "number"
        },
        "longitude": {
          "type": "number"
        },
        "region": {
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectNeed": {
      "properties": {
        "description": {
          "type": "string"
        },
        "support": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectReward": {
      "properties": {
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "license": {
          "type": "string"
        },
        "reward": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "api_projects_project_get_ProjectTranslation": {
      "properties": {
        "about": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keywords": {
          "type": "string"
        },
        "media": {
          "type": "string"
        },
        "motivation": {
          "type": "string"
        },
        "related": {
          "type": "string"
        },
        "reward": {
          "type": "string"
        },
        "subtitle": {
          "type": "string"
        },
        "video": {
          "type": "string"
        }
      }
    },
    "api_projects_projects_get_Project": {
      "properties": {
        "amount": {
          "description": "Currently achieved amount for the project",
          "type": "number"
        },
        "date-created": {
          "description": "Date when the project was created RFC822 format",
          "type": "string"
        },
        "date-published": {
          "description": "Date when the project was published RFC822 format",
          "type": "string"
        },
        "description-short": {
          "description": "Short description of the project",
          "type": "string"
        },
        "id": {
          "description": "Project unique identifier",
          "type": "string"
        },
        "image-url": {
          "description": "URL with the main image of the project",
          "type": "string"
        },
        "lang": {
          "description": "Main language of the project",
          "type": "string"
        },
        "latitude": {
          "description": "Latitude coordinate for the project (if available)",
          "type": "number"
        },
        "longitude": {
          "description": "Longitude coordinate for the project (if available)",
          "type": "number"
        },
        "minimum": {
          "description": "Minimum amount to achieve to consider the project succeeded",
          "type": "number"
        },
        "name": {
          "description": "Name of the project",
          "type": "string"
        },
        "node": {
          "description": "Node where the project was created originally",
          "type": "string"
        },
        "optimum": {
          "description": "Optimum amount to achieve for the project to achieve all his goals",
          "type": "number"
        },
        "owner": {
          "description": "Project owner's user ID",
          "type": "string"
        },
        "owner-name": {
          "description": "Project owner's user name",
          "type": "string"
        },
        "project-url": {
          "description": "Project's original URL (crowd-funding web page)",
          "type": "string"
        },
        "region": {
          "description": "Region location for the project",
          "type": "string"
        },
        "status": {
          "description": "Status of the project",
          "type": "string"
        }
      }
    },
    "api_projects_projects_get_projects": {
      "items": {
        "$ref": "#/definitions/api_projects_projects_get_Project"
      },
      "type": "array"
    },
    "api_reports_reports_community_get_Category": {
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "percentage-users": {
          "type": "number"
        },
        "users": {
          "type": "integer"
        }
      }
    },
    "api_reports_reports_community_get_Collaboration": {
      "properties": {
        "interactions": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "profile-image-url": {
          "type": "string"
        },
        "profile-url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "api_reports_reports_community_get_Community": {
      "properties": {
        "average-collaborators": {
          "type": "integer"
        },
        "average-donors": {
          "type": "integer"
        },
        "cash-donors": {
          "type": "integer"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_community_get_Category"
          },
          "type": "array"
        },
        "collaborators": {
          "type": "integer"
        },
        "creators-collaborators": {
          "type": "integer"
        },
        "creators-donors": {
          "type": "integer"
        },
        "creditcard-donors": {
          "type": "integer"
        },
        "donors": {
          "type": "integer"
        },
        "donors-collaborators": {
          "type": "integer"
        },
        "leading-category": {
          "type": "integer"
        },
        "multidonors": {
          "type": "integer"
        },
        "paypal-donors": {
          "type": "integer"
        },
        "percentage-donors-users": {
          "type": "number"
        },
        "percentage-multidonor-donors": {
          "type": "number"
        },
        "percentage-multidonor-users": {
          "type": "number"
        },
        "percentage-unsubscribed-users": {
          "type": "number"
        },
        "percentage-users-leading-category": {
          "type": "number"
        },
        "percentage-users-second-category": {
          "type": "number"
        },
        "second-category": {
          "type": "integer"
        },
        "top10-collaborators": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_community_get_Collaboration"
          },
          "type": "array"
        },
        "top10-donors": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_community_get_Donation"
          },
          "type": "array"
        },
        "top10-multidonors": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_community_get_Donation"
          },
          "type": "array"
        },
        "users": {
          "type": "integer"
        },
        "users-leading-category": {
          "type": "integer"
        },
        "users-second-category": {
          "type": "integer"
        }
      }
    },
    "api_reports_reports_community_get_Donation": {
      "properties": {
        "amount": {
          "type": "number"
        },
        "contributions": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "profile-image-url": {
          "type": "string"
        },
        "profile-url": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "api_reports_reports_money_get_Money": {
      "properties": {
        "average-donation": {
          "type": "number"
        },
        "average-donation-paypal": {
          "type": "number"
        },
        "average-failed": {
          "type": "number"
        },
        "average-minimum": {
          "type": "number"
        },
        "average-received": {
          "type": "number"
        },
        "average-second-round": {
          "type": "number"
        },
        "cash-amount": {
          "type": "integer"
        },
        "creditcard-amount": {
          "type": "integer"
        },
        "fee-amount": {
          "type": "number"
        },
        "matchfund-amount": {
          "type": "integer"
        },
        "matchfundpledge-amount": {
          "type": "integer"
        },
        "paypal-amount": {
          "type": "integer"
        },
        "percentage-pledged-failed": {
          "type": "number"
        },
        "percentage-pledged-successful": {
          "type": "number"
        },
        "pledged": {
          "type": "integer"
        },
        "refunded": {
          "type": "integer"
        }
      }
    },
    "api_reports_reports_projects_get_Project": {
      "properties": {
        "average-amount-successful": {
          "type": "number"
        },
        "average-posts-successful": {
          "type": "number"
        },
        "failed": {
          "type": "integer"
        },
        "percentage-successful": {
          "type": "integer"
        },
        "percentage-successful-completed": {
          "type": "number"
        },
        "published": {
          "type": "integer"
        },
        "received": {
          "type": "integer"
        },
        "successful": {
          "type": "integer"
        },
        "successful-completed": {
          "type": "integer"
        },
        "top10-collaborations": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_projects_get_ProjectContribution"
          },
          "type": "array"
        },
        "top10-donations": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_projects_get_ProjectContribution"
          },
          "type": "array"
        },
        "top10-receipts": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_projects_get_ProjectAmount"
          },
          "type": "array"
        }
      }
    },
    "api_reports_reports_projects_get_ProjectAmount": {
      "properties": {
        "date-published": {
          "type": "string"
        },
        "description-short": {
          "type": "string"
        },
        "image-url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "project-url": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        },
        "video-url": {
          "type": "string"
        }
      }
    },
    "api_reports_reports_projects_get_ProjectContribution": {
      "properties": {
        "date-published": {
          "type": "string"
        },
        "description-short": {
          "type": "string"
        },
        "image-url": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "project-url": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        },
        "video-url": {
          "type": "string"
        }
      }
    },
    "api_reports_reports_rewards_get_Favourite": {
      "properties": {
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "svg-url": {
          "type": "string"
        },
        "total": {
          "type": "integer"
        }
      }
    },
    "api_reports_reports_rewards_get_PerAmount": {
      "properties": {
        "rewards-between-100-400": {
          "type": "integer"
        },
        "rewards-between-15-30": {
          "type": "integer"
        },
        "rewards-between-30-100": {
          "type": "integer"
        },
        "rewards-less-than-15": {
          "type": "integer"
        },
        "rewards-more-than-400": {
          "type": "integer"
        }
      }
    },
    "api_reports_reports_rewards_get_Reward": {
      "properties": {
        "favorite-rewards": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_rewards_get_Favourite"
          },
          "type": "array"
        },
        "percentage-reward-refusal": {
          "type": "number"
        },
        "reward-refusal": {
          "type": "integer"
        },
        "rewards-per-amount": {
          "items": {
            "$ref": "#/definitions/api_reports_reports_rewards_get_PerAmount"
          },
          "type": "array"
        }
      }
    },
    "api_reports_reports_summary_get_Summary": {
      "properties": {
        "average-donation": {
          "type": "number"
        },
        "categories": {
          "items": {
            "$ref": "#/definitions/api_reports_community_get_Category"
          },
          "type": "array"
        },
        "favorite-rewards": {
          "items": {
            "$ref": "#/definitions/api_reports_rewards_get_Favourite"
          },
          "type": "array"
        },
        "matchfund-amount": {
          "type": "integer"
        },
        "matchfundpledge-amount": {
          "type": "integer"
        },
        "pledged": {
          "type": "integer"
        },
        "projects-failed": {
          "type": "integer"
        },
        "projects-published": {
          "type": "integer"
        },
        "projects-received": {
          "type": "integer"
        },
        "projects-successful": {
          "type": "integer"
        },
        "top10-collaborations": {
          "items": {
            "$ref": "#/definitions/api_reports_projects_get_ProjectContribution"
          },
          "type": "array"
        },
        "top10-donations": {
          "items": {
            "$ref": "#/definitions/api_reports_projects_get_ProjectContribution"
          },
          "type": "array"
        },
        "users": {
          "type": "integer"
        }
      }
    },
    "api_users_user_get_UserFull": {
      "properties": {
        "about": {
          "description": "User's about text",
          "type": "string"
        },
        "amount-public-invested": {
          "description": "Amount of money invested in any project (excluding anonymous investions)",
          "type": "number"
        },
        "date-created": {
          "description": "Date when the user was created RFC822 format",
          "type": "string"
        },
        "id": {
          "description": "User unique identifier",
          "type": "string"
        },
        "lang": {
          "description": "Language for the user's texts description",
          "type": "string"
        },
        "name": {
          "description": "Name of the user",
          "type": "string"
        },
        "node": {
          "description": "Node where the user was created originally",
          "type": "string"
        },
        "profile-image-url": {
          "description": "URL with the avatar (image) of the user",
          "type": "string"
        },
        "profile-url": {
          "description": "URL for the user profile",
          "type": "string"
        },
        "projects-collaborated": {
          "description": "Number of project the user has interacted",
          "type": "number"
        },
        "projects-public-invested": {
          "description": "Number of projects where the user has invested (excluding anonymous investions)",
          "type": "number"
        },
        "projects-published": {
          "description": "Number of project the user has created and published",
          "type": "number"
        },
        "translations": {
          "description": "All available translations in a list by language",
          "items": {
            "$ref": "#/definitions/api_users_user_get_UserTranslation"
          },
          "type": "array"
        }
      }
    },
    "api_users_user_get_UserTranslation": {
      "properties": {
        "about": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "api_users_users_get_User": {
      "properties": {
        "date-created": {
          "description": "Date when the user was created RFC822 format",
          "type": "string"
        },
        "id": {
          "description": "User unique identifier",
          "type": "string"
        },
        "name": {
          "description": "Name of the user",
          "type": "string"
        },
        "node": {
          "description": "Node where the user was created originally",
          "type": "string"
        },
        "profile-image-url": {
          "description": "URL with the avatar (image) of the user",
          "type": "string"
        },
        "profile-url": {
          "description": "URL for the user profile",
          "type": "string"
        }
      }
    },
    "api_users_users_get_users": {
      "items": {
        "$ref": "#/definitions/api_users_users_get_User"
      },
      "type": "array"
    }
  },
  "info": {
    "description": "Goteo.org Api",
    "termsOfService": "Terms of service",
    "title": "Goteo.org Api",
    "version": "1.1"
  },
  "paths": {
    "/calls/": {
      "get": {
        "description": "This resource returns call information.<br/><a href=\"http://developers.goteo.org/doc/calls\">developers.goteo.org/doc/calls</a>",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the invests originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified. Restricts the list to the invests that have either collaborate or contributed (financially) to that project(s).",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the invests created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the invests created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple invests can be specified. Restricts the list to the invests that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the invests used in projects geolocated in that area",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available calls",
            "schema": {
              "$ref": "#/definitions/api_calls_calls_get_calls"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Call API",
        "tags": [
          "calls"
        ]
      }
    },
    "/calls/{call_id}": {
      "get": {
        "description": "This resource returns call information.<br/><a href=\"http://developers.goteo.org/calls#call\">developers.goteo.org/calls#call</a>",
        "parameters": [
          {
            "description": "Unique ID for the call",
            "in": "path",
            "name": "call_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Call data",
            "schema": {
              "$ref": "#/definitions/api_calls_call_get_CallFull"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Call API",
        "tags": [
          "call"
        ]
      }
    },
    "/calls/{call_id}/projects/": {
      "get": {
        "description": "This resource returns user projects information.<br/><a href=\"http://developers.goteo.org/calls#projects\">developers.goteo.org/calls#projects</a>",
        "parameters": [
          {
            "description": "Unique ID for the call",
            "in": "path",
            "name": "call_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the users originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by call category. Multiple users can be specified. Restricts the list to the users that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Project data",
            "schema": {
              "items": {
                "$ref": "#/definitions/api_calls_call_projects_get_ProjectCall"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Call API",
        "tags": [
          "call_projects"
        ]
      }
    },
    "/categories/": {
      "get": {
        "description": "This resource returns categories information.<br/><a href=\"http://developers.goteo.org/doc/categories\">developers.goteo.org/doc/categories</a>",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the categories used in projects assigned in that nodes",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified. Restricts the list to the categories used in that projects",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the categories used in projects created between that dates",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the categories used in projects created between that dates",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Get results by specified lang. Multiple langs can be specified",
            "in": "query",
            "name": "lang",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the categories used in projects geolocated in that area",
            "in": "query",
            "name": "location",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available categories",
            "schema": {
              "$ref": "#/definitions/api_categories_categories_get_categories"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Category API",
        "tags": [
          "categories"
        ]
      }
    },
    "/digests/{endpoint}": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/digests\">developers.goteo.org/doc/digests</a><br/>This resource returns grouped statistics",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_digests_get_Digest"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Digest Stats API",
        "tags": [
          "digests"
        ]
      }
    },
    "/invests/": {
      "get": {
        "description": "This resource returns invest information.<br/><a href=\"http://developers.goteo.org/doc/invests\">developers.goteo.org/doc/invests</a>",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the invests originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified. Restricts the list to the invests that have either collaborate or contributed (financially) to that project(s).",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the invests created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the invests created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple invests can be specified. Restricts the list to the invests that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the invests used in projects geolocated in that area",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available invests",
            "schema": {
              "$ref": "#/definitions/api_invests_invests_get_invests"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Invest API",
        "tags": [
          "invests"
        ]
      }
    },
    "/invests/{invest_id}": {
      "get": {
        "description": "This resource returns invest information.<br/><a href=\"http://developers.goteo.org/invests#invest\">developers.goteo.org/invests#invest</a>",
        "parameters": [
          {
            "description": "Unique ID for the invest",
            "in": "path",
            "name": "invest_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Invest data",
            "schema": {
              "$ref": "#/definitions/api_invests_invest_get_InvestFull"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Invest API",
        "tags": [
          "invest"
        ]
      }
    },
    "/licenses/": {
      "get": {
        "description": "This resource returns license information.<br/><a href=\"http://developers.goteo.org/doc/licenses\">developers.goteo.org/doc/licenses</a>",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the licenses used in projects assigned in that nodes",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified. Restricts the list to the licenses used in that projects",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the licenses used in projects created between that dates",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the licenses used in projects created between that dates",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Get results by specified lang. Multiple langs can be specified",
            "in": "query",
            "name": "lang",
            "type": "string"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the licenses used in projects geolocated in that area",
            "in": "query",
            "name": "location",
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available licenses",
            "schema": {
              "$ref": "#/definitions/api_licenses_licenses_get_licenses"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "License API",
        "tags": [
          "licenses"
        ]
      }
    },
    "/projects/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/projects\">developers.goteo.org/doc/projects</a><br/>This resource returns project information.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the projects originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the projects created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the projects created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified. Restricts the list to the projects that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km). Restricts the list to the projects used in projects geolocated in that area",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_projects_projects_get_projects"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Project API",
        "tags": [
          "projects"
        ]
      }
    },
    "/projects/{project_id}": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/projects#project\">developers.goteo.org/projects#project</a><br/>This resource returns project detailed information.",
        "parameters": [
          {
            "description": "Unique ID for the project",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project data",
            "schema": {
              "$ref": "#/definitions/api_projects_project_get_ProjectFull"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Project API",
        "tags": [
          "project"
        ]
      }
    },
    "/projects/{project_id}/donors/": {
      "get": {
        "description": "This resource returns user donors information.<br/><a href=\"http://developers.goteo.org/projects#donors\">developers.goteo.org/projects#donors</a>",
        "parameters": [
          {
            "description": "Unique ID for the project",
            "in": "path",
            "name": "project_id",
            "required": true,
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the users originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple users can be specified. Restricts the list to the users that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema": {
              "items": {
                "$ref": "#/definitions/api_projects_project_donors_get_ProjectDonor"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Project API",
        "tags": [
          "project_donors"
        ]
      }
    },
    "/reports/community/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/reports#community\">developers.goteo.org/doc/reports#community</a><br/>This resource returns statistics about the community in Goteo.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Community object",
            "schema": {
              "$ref": "#/definitions/api_reports_reports_community_get_Community"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Community Stats API",
        "tags": [
          "reports_community"
        ]
      }
    },
    "/reports/money/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/reports#money\">developers.goteo.org/doc/reports#money</a><br/>This resource returns statistics about money in Goteo.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_reports_reports_money_get_Money"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Money Stats API",
        "tags": [
          "reports_money"
        ]
      }
    },
    "/reports/projects/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/reports#projects\">developers.goteo.org/doc/reports#projects</a><br/>This resource returns statistics about projects in Goteo.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified.",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_reports_reports_projects_get_Project"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Projects Stats API",
        "tags": [
          "reports_projects"
        ]
      }
    },
    "/reports/rewards/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/reports#rewards\">developers.goteo.org/doc/reports#rewards</a><br/>This resource returns statistics about rewards in Goteo.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_reports_reports_rewards_get_Reward"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Reward Stats API",
        "tags": [
          "reports_rewards"
        ]
      }
    },
    "/reports/summary/": {
      "get": {
        "description": "<a href=\"http://developers.goteo.org/doc/reports#summary\">developers.goteo.org/doc/reports#summary</a><br/>This resource returns statistics about the summary in Goteo.",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\"",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\"",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple projects can be specified",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "collectionFormat": "csv",
            "description": "Filter by project location (Latitude,longitude,Radius in Km)",
            "in": "query",
            "name": "location",
            "type": "number"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available projects",
            "schema": {
              "$ref": "#/definitions/api_reports_reports_summary_get_Summary"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "Summary Stats API",
        "tags": [
          "reports_summary"
        ]
      }
    },
    "/users/": {
      "get": {
        "description": "This resource returns user information.<br/><a href=\"http://developers.goteo.org/doc/users\">developers.goteo.org/doc/users</a>",
        "parameters": [
          {
            "collectionFormat": "multi",
            "description": "Filter by individual node(s). Multiple nodes can be specified. Restricts the list to the users originally created in that node(s)",
            "in": "query",
            "name": "node",
            "type": "string"
          },
          {
            "collectionFormat": "multi",
            "description": "Filter by individual project(s). Multiple projects can be specified. Restricts the list to the users that have either collaborate or contributed (financially) to that project(s).",
            "in": "query",
            "name": "project",
            "type": "string"
          },
          {
            "description": "Filter from date. Ex. \"2013-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "from_date",
            "type": "string"
          },
          {
            "description": "Filter until date.. Ex. \"2014-01-01\". Restricts the list to the users created in that range",
            "format": "date",
            "in": "query",
            "name": "to_date",
            "type": "string"
          },
          {
            "description": "Filter by project category. Multiple users can be specified. Restricts the list to the users that have interests in that category(ies)",
            "in": "query",
            "name": "category",
            "type": "integer"
          },
          {
            "description": "Page number (starting at 1) if the result can be paginated",
            "in": "query",
            "name": "page",
            "type": "integer"
          },
          {
            "description": "Page limit (maximum 50 results, defaults to 10) if the result can be paginated",
            "in": "query",
            "name": "limit",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "List of available users",
            "schema": {
              "$ref": "#/definitions/api_users_users_get_users"
            }
          },
          "400": {
            "description": "Invalid parameters format"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "User API",
        "tags": [
          "users"
        ]
      }
    },
    "/users/{user_id}": {
      "get": {
        "description": "This resource returns user information.<br/><a href=\"http://developers.goteo.org/users#user\">developers.goteo.org/users#user</a>",
        "parameters": [
          {
            "description": "Unique ID for the user",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema": {
              "$ref": "#/definitions/api_users_user_get_UserFull"
            }
          },
          "404": {
            "description": "Resource not found"
          }
        },
        "security": [
          {
            "basic": []
          }
        ],
        "summary": "User API",
        "tags": [
          "user"
        ]
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  },
  "swagger": "2.0"
}